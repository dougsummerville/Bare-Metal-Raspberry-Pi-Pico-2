
/* Copyright (c) 2024-2025 Douglas H. Summerville (dsummer@binghamton.edu) 
 *
 * Created from scraped data which is Copyright (c) 2024 Raspberry Pi
 * (Trading) Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef RP2350_ACCESSCTRL_H
#define RP2350_ACCESSCTRL_H

#include <stdint.h>

#define ALL1 ((uint32_t)0xFFFFFFFF)

typedef struct{
		uint32_t lock;
		uint32_t force_core_ns;
		uint32_t cfgreset;
		uint32_t gpio_nsmask0;
		uint32_t gpio_nsmask1;
		uint32_t rom;
		uint32_t xip_main;
		uint32_t sram0;
		uint32_t sram1;
		uint32_t sram2;
		uint32_t sram3;
		uint32_t sram4;
		uint32_t sram5;
		uint32_t sram6;
		uint32_t sram7;
		uint32_t sram8;
		uint32_t sram9;
		uint32_t dma;
		uint32_t usbctrl;
		uint32_t pio0;
		uint32_t pio1;
		uint32_t pio2;
		uint32_t coresight_trace;
		uint32_t coresight_periph;
		uint32_t sysinfo;
		uint32_t resets;
		uint32_t io_bank0;
		uint32_t io_bank1;
		uint32_t pads_bank0;
		uint32_t pads_qspi;
		uint32_t busctrl;
		uint32_t adc0;
		uint32_t hstx;
		uint32_t i2c0;
		uint32_t i2c1;
		uint32_t pwm;
		uint32_t spi0;
		uint32_t spi1;
		uint32_t timer0;
		uint32_t timer1;
		uint32_t uart0;
		uint32_t uart1;
		uint32_t otp;
		uint32_t tbman;
		uint32_t powman;
		uint32_t trng;
		uint32_t sha256;
		uint32_t syscfg;
		uint32_t clocks;
		uint32_t xosc;
		uint32_t rosc;
		uint32_t pll_sys;
		uint32_t pll_usb;
		uint32_t ticks;
		uint32_t watchdog;
		uint32_t rsm;
		uint32_t xip_ctrl;
		uint32_t xip_qmi;
		uint32_t xip_aux;
		uint32_t RSVD0[965];
		uint32_t xor_lock;
		uint32_t xor_force_core_ns;
		uint32_t xor_cfgreset;
		uint32_t xor_gpio_nsmask0;
		uint32_t xor_gpio_nsmask1;
		uint32_t xor_rom;
		uint32_t xor_xip_main;
		uint32_t xor_sram0;
		uint32_t xor_sram1;
		uint32_t xor_sram2;
		uint32_t xor_sram3;
		uint32_t xor_sram4;
		uint32_t xor_sram5;
		uint32_t xor_sram6;
		uint32_t xor_sram7;
		uint32_t xor_sram8;
		uint32_t xor_sram9;
		uint32_t xor_dma;
		uint32_t xor_usbctrl;
		uint32_t xor_pio0;
		uint32_t xor_pio1;
		uint32_t xor_pio2;
		uint32_t xor_coresight_trace;
		uint32_t xor_coresight_periph;
		uint32_t xor_sysinfo;
		uint32_t xor_resets;
		uint32_t xor_io_bank0;
		uint32_t xor_io_bank1;
		uint32_t xor_pads_bank0;
		uint32_t xor_pads_qspi;
		uint32_t xor_busctrl;
		uint32_t xor_adc0;
		uint32_t xor_hstx;
		uint32_t xor_i2c0;
		uint32_t xor_i2c1;
		uint32_t xor_pwm;
		uint32_t xor_spi0;
		uint32_t xor_spi1;
		uint32_t xor_timer0;
		uint32_t xor_timer1;
		uint32_t xor_uart0;
		uint32_t xor_uart1;
		uint32_t xor_otp;
		uint32_t xor_tbman;
		uint32_t xor_powman;
		uint32_t xor_trng;
		uint32_t xor_sha256;
		uint32_t xor_syscfg;
		uint32_t xor_clocks;
		uint32_t xor_xosc;
		uint32_t xor_rosc;
		uint32_t xor_pll_sys;
		uint32_t xor_pll_usb;
		uint32_t xor_ticks;
		uint32_t xor_watchdog;
		uint32_t xor_rsm;
		uint32_t xor_xip_ctrl;
		uint32_t xor_xip_qmi;
		uint32_t xor_xip_aux;
		uint32_t RSVDxor_0[965];
		uint32_t set_lock;
		uint32_t set_force_core_ns;
		uint32_t set_cfgreset;
		uint32_t set_gpio_nsmask0;
		uint32_t set_gpio_nsmask1;
		uint32_t set_rom;
		uint32_t set_xip_main;
		uint32_t set_sram0;
		uint32_t set_sram1;
		uint32_t set_sram2;
		uint32_t set_sram3;
		uint32_t set_sram4;
		uint32_t set_sram5;
		uint32_t set_sram6;
		uint32_t set_sram7;
		uint32_t set_sram8;
		uint32_t set_sram9;
		uint32_t set_dma;
		uint32_t set_usbctrl;
		uint32_t set_pio0;
		uint32_t set_pio1;
		uint32_t set_pio2;
		uint32_t set_coresight_trace;
		uint32_t set_coresight_periph;
		uint32_t set_sysinfo;
		uint32_t set_resets;
		uint32_t set_io_bank0;
		uint32_t set_io_bank1;
		uint32_t set_pads_bank0;
		uint32_t set_pads_qspi;
		uint32_t set_busctrl;
		uint32_t set_adc0;
		uint32_t set_hstx;
		uint32_t set_i2c0;
		uint32_t set_i2c1;
		uint32_t set_pwm;
		uint32_t set_spi0;
		uint32_t set_spi1;
		uint32_t set_timer0;
		uint32_t set_timer1;
		uint32_t set_uart0;
		uint32_t set_uart1;
		uint32_t set_otp;
		uint32_t set_tbman;
		uint32_t set_powman;
		uint32_t set_trng;
		uint32_t set_sha256;
		uint32_t set_syscfg;
		uint32_t set_clocks;
		uint32_t set_xosc;
		uint32_t set_rosc;
		uint32_t set_pll_sys;
		uint32_t set_pll_usb;
		uint32_t set_ticks;
		uint32_t set_watchdog;
		uint32_t set_rsm;
		uint32_t set_xip_ctrl;
		uint32_t set_xip_qmi;
		uint32_t set_xip_aux;
		uint32_t RSVDset_0[965];
		uint32_t clr_lock;
		uint32_t clr_force_core_ns;
		uint32_t clr_cfgreset;
		uint32_t clr_gpio_nsmask0;
		uint32_t clr_gpio_nsmask1;
		uint32_t clr_rom;
		uint32_t clr_xip_main;
		uint32_t clr_sram0;
		uint32_t clr_sram1;
		uint32_t clr_sram2;
		uint32_t clr_sram3;
		uint32_t clr_sram4;
		uint32_t clr_sram5;
		uint32_t clr_sram6;
		uint32_t clr_sram7;
		uint32_t clr_sram8;
		uint32_t clr_sram9;
		uint32_t clr_dma;
		uint32_t clr_usbctrl;
		uint32_t clr_pio0;
		uint32_t clr_pio1;
		uint32_t clr_pio2;
		uint32_t clr_coresight_trace;
		uint32_t clr_coresight_periph;
		uint32_t clr_sysinfo;
		uint32_t clr_resets;
		uint32_t clr_io_bank0;
		uint32_t clr_io_bank1;
		uint32_t clr_pads_bank0;
		uint32_t clr_pads_qspi;
		uint32_t clr_busctrl;
		uint32_t clr_adc0;
		uint32_t clr_hstx;
		uint32_t clr_i2c0;
		uint32_t clr_i2c1;
		uint32_t clr_pwm;
		uint32_t clr_spi0;
		uint32_t clr_spi1;
		uint32_t clr_timer0;
		uint32_t clr_timer1;
		uint32_t clr_uart0;
		uint32_t clr_uart1;
		uint32_t clr_otp;
		uint32_t clr_tbman;
		uint32_t clr_powman;
		uint32_t clr_trng;
		uint32_t clr_sha256;
		uint32_t clr_syscfg;
		uint32_t clr_clocks;
		uint32_t clr_xosc;
		uint32_t clr_rosc;
		uint32_t clr_pll_sys;
		uint32_t clr_pll_usb;
		uint32_t clr_ticks;
		uint32_t clr_watchdog;
		uint32_t clr_rsm;
		uint32_t clr_xip_ctrl;
		uint32_t clr_xip_qmi;
		uint32_t clr_xip_aux;
		uint32_t RSVDclr_0[965];
} ACCESSCTRL_REG_BLOCKS;

#define accessctrl (*(ACCESSCTRL_REG_BLOCKS volatile *)0x40060000)

/*LOCK Register macros*/

#define ACCESSCTRL_LOCK_DEBUG(v) (((v)&0x1)<<3)
#define ACCESSCTRL_LOCK_DEBUG_MASK ACCESSCTRL_LOCK_DEBUG(ALL1)
#define ACCESSCTRL_LOCK_DMA(v) (((v)&0x1)<<2)
#define ACCESSCTRL_LOCK_DMA_MASK ACCESSCTRL_LOCK_DMA(ALL1)
#define ACCESSCTRL_LOCK_CORE1(v) (((v)&0x1)<<1)
#define ACCESSCTRL_LOCK_CORE1_MASK ACCESSCTRL_LOCK_CORE1(ALL1)
#define ACCESSCTRL_LOCK_CORE0(v) (((v)&0x1)<<0)
#define ACCESSCTRL_LOCK_CORE0_MASK ACCESSCTRL_LOCK_CORE0(ALL1)

/*FORCE_CORE_NS Register macros*/

#define ACCESSCTRL_FORCE_CORE_NS_CORE1(v) (((v)&0x1)<<1)
#define ACCESSCTRL_FORCE_CORE_NS_CORE1_MASK ACCESSCTRL_FORCE_CORE_NS_CORE1(ALL1)

/*CFGRESET Register macros*/


/*GPIO_NSMASK0 Register macros*/


/*GPIO_NSMASK1 Register macros*/

#define ACCESSCTRL_GPIO_NSMASK1_QSPI_SD(v) (((v)&0xf)<<28)
#define ACCESSCTRL_GPIO_NSMASK1_QSPI_SD_MASK ACCESSCTRL_GPIO_NSMASK1_QSPI_SD(ALL1)
#define ACCESSCTRL_GPIO_NSMASK1_QSPI_CSN(v) (((v)&0x1)<<27)
#define ACCESSCTRL_GPIO_NSMASK1_QSPI_CSN_MASK ACCESSCTRL_GPIO_NSMASK1_QSPI_CSN(ALL1)
#define ACCESSCTRL_GPIO_NSMASK1_QSPI_SCK(v) (((v)&0x1)<<26)
#define ACCESSCTRL_GPIO_NSMASK1_QSPI_SCK_MASK ACCESSCTRL_GPIO_NSMASK1_QSPI_SCK(ALL1)
#define ACCESSCTRL_GPIO_NSMASK1_USB_DM(v) (((v)&0x1)<<25)
#define ACCESSCTRL_GPIO_NSMASK1_USB_DM_MASK ACCESSCTRL_GPIO_NSMASK1_USB_DM(ALL1)
#define ACCESSCTRL_GPIO_NSMASK1_USB_DP(v) (((v)&0x1)<<24)
#define ACCESSCTRL_GPIO_NSMASK1_USB_DP_MASK ACCESSCTRL_GPIO_NSMASK1_USB_DP(ALL1)
#define ACCESSCTRL_GPIO_NSMASK1_GPIO(v) (((v)&0xffff)<<0)
#define ACCESSCTRL_GPIO_NSMASK1_GPIO_MASK ACCESSCTRL_GPIO_NSMASK1_GPIO(ALL1)

/*ROM Register macros*/

#define ACCESSCTRL_ROM_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_ROM_DBG_MASK ACCESSCTRL_ROM_DBG(ALL1)
#define ACCESSCTRL_ROM_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_ROM_DMA_MASK ACCESSCTRL_ROM_DMA(ALL1)
#define ACCESSCTRL_ROM_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_ROM_CORE1_MASK ACCESSCTRL_ROM_CORE1(ALL1)
#define ACCESSCTRL_ROM_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_ROM_CORE0_MASK ACCESSCTRL_ROM_CORE0(ALL1)
#define ACCESSCTRL_ROM_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_ROM_SP_MASK ACCESSCTRL_ROM_SP(ALL1)
#define ACCESSCTRL_ROM_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_ROM_SU_MASK ACCESSCTRL_ROM_SU(ALL1)
#define ACCESSCTRL_ROM_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_ROM_NSP_MASK ACCESSCTRL_ROM_NSP(ALL1)
#define ACCESSCTRL_ROM_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_ROM_NSU_MASK ACCESSCTRL_ROM_NSU(ALL1)

/*XIP_MAIN Register macros*/

#define ACCESSCTRL_XIP_MAIN_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_XIP_MAIN_DBG_MASK ACCESSCTRL_XIP_MAIN_DBG(ALL1)
#define ACCESSCTRL_XIP_MAIN_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_XIP_MAIN_DMA_MASK ACCESSCTRL_XIP_MAIN_DMA(ALL1)
#define ACCESSCTRL_XIP_MAIN_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_XIP_MAIN_CORE1_MASK ACCESSCTRL_XIP_MAIN_CORE1(ALL1)
#define ACCESSCTRL_XIP_MAIN_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_XIP_MAIN_CORE0_MASK ACCESSCTRL_XIP_MAIN_CORE0(ALL1)
#define ACCESSCTRL_XIP_MAIN_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_XIP_MAIN_SP_MASK ACCESSCTRL_XIP_MAIN_SP(ALL1)
#define ACCESSCTRL_XIP_MAIN_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_XIP_MAIN_SU_MASK ACCESSCTRL_XIP_MAIN_SU(ALL1)
#define ACCESSCTRL_XIP_MAIN_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_XIP_MAIN_NSP_MASK ACCESSCTRL_XIP_MAIN_NSP(ALL1)
#define ACCESSCTRL_XIP_MAIN_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_XIP_MAIN_NSU_MASK ACCESSCTRL_XIP_MAIN_NSU(ALL1)

/*SRAM0 Register macros*/

#define ACCESSCTRL_SRAM0_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SRAM0_DBG_MASK ACCESSCTRL_SRAM0_DBG(ALL1)
#define ACCESSCTRL_SRAM0_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SRAM0_DMA_MASK ACCESSCTRL_SRAM0_DMA(ALL1)
#define ACCESSCTRL_SRAM0_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SRAM0_CORE1_MASK ACCESSCTRL_SRAM0_CORE1(ALL1)
#define ACCESSCTRL_SRAM0_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SRAM0_CORE0_MASK ACCESSCTRL_SRAM0_CORE0(ALL1)
#define ACCESSCTRL_SRAM0_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SRAM0_SP_MASK ACCESSCTRL_SRAM0_SP(ALL1)
#define ACCESSCTRL_SRAM0_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SRAM0_SU_MASK ACCESSCTRL_SRAM0_SU(ALL1)
#define ACCESSCTRL_SRAM0_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SRAM0_NSP_MASK ACCESSCTRL_SRAM0_NSP(ALL1)
#define ACCESSCTRL_SRAM0_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SRAM0_NSU_MASK ACCESSCTRL_SRAM0_NSU(ALL1)

/*SRAM1 Register macros*/

#define ACCESSCTRL_SRAM1_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SRAM1_DBG_MASK ACCESSCTRL_SRAM1_DBG(ALL1)
#define ACCESSCTRL_SRAM1_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SRAM1_DMA_MASK ACCESSCTRL_SRAM1_DMA(ALL1)
#define ACCESSCTRL_SRAM1_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SRAM1_CORE1_MASK ACCESSCTRL_SRAM1_CORE1(ALL1)
#define ACCESSCTRL_SRAM1_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SRAM1_CORE0_MASK ACCESSCTRL_SRAM1_CORE0(ALL1)
#define ACCESSCTRL_SRAM1_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SRAM1_SP_MASK ACCESSCTRL_SRAM1_SP(ALL1)
#define ACCESSCTRL_SRAM1_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SRAM1_SU_MASK ACCESSCTRL_SRAM1_SU(ALL1)
#define ACCESSCTRL_SRAM1_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SRAM1_NSP_MASK ACCESSCTRL_SRAM1_NSP(ALL1)
#define ACCESSCTRL_SRAM1_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SRAM1_NSU_MASK ACCESSCTRL_SRAM1_NSU(ALL1)

/*SRAM2 Register macros*/

#define ACCESSCTRL_SRAM2_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SRAM2_DBG_MASK ACCESSCTRL_SRAM2_DBG(ALL1)
#define ACCESSCTRL_SRAM2_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SRAM2_DMA_MASK ACCESSCTRL_SRAM2_DMA(ALL1)
#define ACCESSCTRL_SRAM2_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SRAM2_CORE1_MASK ACCESSCTRL_SRAM2_CORE1(ALL1)
#define ACCESSCTRL_SRAM2_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SRAM2_CORE0_MASK ACCESSCTRL_SRAM2_CORE0(ALL1)
#define ACCESSCTRL_SRAM2_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SRAM2_SP_MASK ACCESSCTRL_SRAM2_SP(ALL1)
#define ACCESSCTRL_SRAM2_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SRAM2_SU_MASK ACCESSCTRL_SRAM2_SU(ALL1)
#define ACCESSCTRL_SRAM2_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SRAM2_NSP_MASK ACCESSCTRL_SRAM2_NSP(ALL1)
#define ACCESSCTRL_SRAM2_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SRAM2_NSU_MASK ACCESSCTRL_SRAM2_NSU(ALL1)

/*SRAM3 Register macros*/

#define ACCESSCTRL_SRAM3_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SRAM3_DBG_MASK ACCESSCTRL_SRAM3_DBG(ALL1)
#define ACCESSCTRL_SRAM3_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SRAM3_DMA_MASK ACCESSCTRL_SRAM3_DMA(ALL1)
#define ACCESSCTRL_SRAM3_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SRAM3_CORE1_MASK ACCESSCTRL_SRAM3_CORE1(ALL1)
#define ACCESSCTRL_SRAM3_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SRAM3_CORE0_MASK ACCESSCTRL_SRAM3_CORE0(ALL1)
#define ACCESSCTRL_SRAM3_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SRAM3_SP_MASK ACCESSCTRL_SRAM3_SP(ALL1)
#define ACCESSCTRL_SRAM3_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SRAM3_SU_MASK ACCESSCTRL_SRAM3_SU(ALL1)
#define ACCESSCTRL_SRAM3_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SRAM3_NSP_MASK ACCESSCTRL_SRAM3_NSP(ALL1)
#define ACCESSCTRL_SRAM3_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SRAM3_NSU_MASK ACCESSCTRL_SRAM3_NSU(ALL1)

/*SRAM4 Register macros*/

#define ACCESSCTRL_SRAM4_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SRAM4_DBG_MASK ACCESSCTRL_SRAM4_DBG(ALL1)
#define ACCESSCTRL_SRAM4_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SRAM4_DMA_MASK ACCESSCTRL_SRAM4_DMA(ALL1)
#define ACCESSCTRL_SRAM4_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SRAM4_CORE1_MASK ACCESSCTRL_SRAM4_CORE1(ALL1)
#define ACCESSCTRL_SRAM4_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SRAM4_CORE0_MASK ACCESSCTRL_SRAM4_CORE0(ALL1)
#define ACCESSCTRL_SRAM4_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SRAM4_SP_MASK ACCESSCTRL_SRAM4_SP(ALL1)
#define ACCESSCTRL_SRAM4_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SRAM4_SU_MASK ACCESSCTRL_SRAM4_SU(ALL1)
#define ACCESSCTRL_SRAM4_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SRAM4_NSP_MASK ACCESSCTRL_SRAM4_NSP(ALL1)
#define ACCESSCTRL_SRAM4_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SRAM4_NSU_MASK ACCESSCTRL_SRAM4_NSU(ALL1)

/*SRAM5 Register macros*/

#define ACCESSCTRL_SRAM5_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SRAM5_DBG_MASK ACCESSCTRL_SRAM5_DBG(ALL1)
#define ACCESSCTRL_SRAM5_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SRAM5_DMA_MASK ACCESSCTRL_SRAM5_DMA(ALL1)
#define ACCESSCTRL_SRAM5_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SRAM5_CORE1_MASK ACCESSCTRL_SRAM5_CORE1(ALL1)
#define ACCESSCTRL_SRAM5_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SRAM5_CORE0_MASK ACCESSCTRL_SRAM5_CORE0(ALL1)
#define ACCESSCTRL_SRAM5_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SRAM5_SP_MASK ACCESSCTRL_SRAM5_SP(ALL1)
#define ACCESSCTRL_SRAM5_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SRAM5_SU_MASK ACCESSCTRL_SRAM5_SU(ALL1)
#define ACCESSCTRL_SRAM5_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SRAM5_NSP_MASK ACCESSCTRL_SRAM5_NSP(ALL1)
#define ACCESSCTRL_SRAM5_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SRAM5_NSU_MASK ACCESSCTRL_SRAM5_NSU(ALL1)

/*SRAM6 Register macros*/

#define ACCESSCTRL_SRAM6_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SRAM6_DBG_MASK ACCESSCTRL_SRAM6_DBG(ALL1)
#define ACCESSCTRL_SRAM6_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SRAM6_DMA_MASK ACCESSCTRL_SRAM6_DMA(ALL1)
#define ACCESSCTRL_SRAM6_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SRAM6_CORE1_MASK ACCESSCTRL_SRAM6_CORE1(ALL1)
#define ACCESSCTRL_SRAM6_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SRAM6_CORE0_MASK ACCESSCTRL_SRAM6_CORE0(ALL1)
#define ACCESSCTRL_SRAM6_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SRAM6_SP_MASK ACCESSCTRL_SRAM6_SP(ALL1)
#define ACCESSCTRL_SRAM6_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SRAM6_SU_MASK ACCESSCTRL_SRAM6_SU(ALL1)
#define ACCESSCTRL_SRAM6_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SRAM6_NSP_MASK ACCESSCTRL_SRAM6_NSP(ALL1)
#define ACCESSCTRL_SRAM6_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SRAM6_NSU_MASK ACCESSCTRL_SRAM6_NSU(ALL1)

/*SRAM7 Register macros*/

#define ACCESSCTRL_SRAM7_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SRAM7_DBG_MASK ACCESSCTRL_SRAM7_DBG(ALL1)
#define ACCESSCTRL_SRAM7_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SRAM7_DMA_MASK ACCESSCTRL_SRAM7_DMA(ALL1)
#define ACCESSCTRL_SRAM7_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SRAM7_CORE1_MASK ACCESSCTRL_SRAM7_CORE1(ALL1)
#define ACCESSCTRL_SRAM7_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SRAM7_CORE0_MASK ACCESSCTRL_SRAM7_CORE0(ALL1)
#define ACCESSCTRL_SRAM7_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SRAM7_SP_MASK ACCESSCTRL_SRAM7_SP(ALL1)
#define ACCESSCTRL_SRAM7_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SRAM7_SU_MASK ACCESSCTRL_SRAM7_SU(ALL1)
#define ACCESSCTRL_SRAM7_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SRAM7_NSP_MASK ACCESSCTRL_SRAM7_NSP(ALL1)
#define ACCESSCTRL_SRAM7_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SRAM7_NSU_MASK ACCESSCTRL_SRAM7_NSU(ALL1)

/*SRAM8 Register macros*/

#define ACCESSCTRL_SRAM8_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SRAM8_DBG_MASK ACCESSCTRL_SRAM8_DBG(ALL1)
#define ACCESSCTRL_SRAM8_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SRAM8_DMA_MASK ACCESSCTRL_SRAM8_DMA(ALL1)
#define ACCESSCTRL_SRAM8_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SRAM8_CORE1_MASK ACCESSCTRL_SRAM8_CORE1(ALL1)
#define ACCESSCTRL_SRAM8_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SRAM8_CORE0_MASK ACCESSCTRL_SRAM8_CORE0(ALL1)
#define ACCESSCTRL_SRAM8_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SRAM8_SP_MASK ACCESSCTRL_SRAM8_SP(ALL1)
#define ACCESSCTRL_SRAM8_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SRAM8_SU_MASK ACCESSCTRL_SRAM8_SU(ALL1)
#define ACCESSCTRL_SRAM8_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SRAM8_NSP_MASK ACCESSCTRL_SRAM8_NSP(ALL1)
#define ACCESSCTRL_SRAM8_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SRAM8_NSU_MASK ACCESSCTRL_SRAM8_NSU(ALL1)

/*SRAM9 Register macros*/

#define ACCESSCTRL_SRAM9_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SRAM9_DBG_MASK ACCESSCTRL_SRAM9_DBG(ALL1)
#define ACCESSCTRL_SRAM9_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SRAM9_DMA_MASK ACCESSCTRL_SRAM9_DMA(ALL1)
#define ACCESSCTRL_SRAM9_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SRAM9_CORE1_MASK ACCESSCTRL_SRAM9_CORE1(ALL1)
#define ACCESSCTRL_SRAM9_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SRAM9_CORE0_MASK ACCESSCTRL_SRAM9_CORE0(ALL1)
#define ACCESSCTRL_SRAM9_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SRAM9_SP_MASK ACCESSCTRL_SRAM9_SP(ALL1)
#define ACCESSCTRL_SRAM9_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SRAM9_SU_MASK ACCESSCTRL_SRAM9_SU(ALL1)
#define ACCESSCTRL_SRAM9_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SRAM9_NSP_MASK ACCESSCTRL_SRAM9_NSP(ALL1)
#define ACCESSCTRL_SRAM9_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SRAM9_NSU_MASK ACCESSCTRL_SRAM9_NSU(ALL1)

/*DMA Register macros*/

#define ACCESSCTRL_DMA_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_DMA_DBG_MASK ACCESSCTRL_DMA_DBG(ALL1)
#define ACCESSCTRL_DMA_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_DMA_DMA_MASK ACCESSCTRL_DMA_DMA(ALL1)
#define ACCESSCTRL_DMA_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_DMA_CORE1_MASK ACCESSCTRL_DMA_CORE1(ALL1)
#define ACCESSCTRL_DMA_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_DMA_CORE0_MASK ACCESSCTRL_DMA_CORE0(ALL1)
#define ACCESSCTRL_DMA_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_DMA_SP_MASK ACCESSCTRL_DMA_SP(ALL1)
#define ACCESSCTRL_DMA_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_DMA_SU_MASK ACCESSCTRL_DMA_SU(ALL1)
#define ACCESSCTRL_DMA_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_DMA_NSP_MASK ACCESSCTRL_DMA_NSP(ALL1)
#define ACCESSCTRL_DMA_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_DMA_NSU_MASK ACCESSCTRL_DMA_NSU(ALL1)

/*USBCTRL Register macros*/

#define ACCESSCTRL_USBCTRL_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_USBCTRL_DBG_MASK ACCESSCTRL_USBCTRL_DBG(ALL1)
#define ACCESSCTRL_USBCTRL_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_USBCTRL_DMA_MASK ACCESSCTRL_USBCTRL_DMA(ALL1)
#define ACCESSCTRL_USBCTRL_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_USBCTRL_CORE1_MASK ACCESSCTRL_USBCTRL_CORE1(ALL1)
#define ACCESSCTRL_USBCTRL_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_USBCTRL_CORE0_MASK ACCESSCTRL_USBCTRL_CORE0(ALL1)
#define ACCESSCTRL_USBCTRL_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_USBCTRL_SP_MASK ACCESSCTRL_USBCTRL_SP(ALL1)
#define ACCESSCTRL_USBCTRL_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_USBCTRL_SU_MASK ACCESSCTRL_USBCTRL_SU(ALL1)
#define ACCESSCTRL_USBCTRL_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_USBCTRL_NSP_MASK ACCESSCTRL_USBCTRL_NSP(ALL1)
#define ACCESSCTRL_USBCTRL_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_USBCTRL_NSU_MASK ACCESSCTRL_USBCTRL_NSU(ALL1)

/*PIO0 Register macros*/

#define ACCESSCTRL_PIO0_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_PIO0_DBG_MASK ACCESSCTRL_PIO0_DBG(ALL1)
#define ACCESSCTRL_PIO0_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_PIO0_DMA_MASK ACCESSCTRL_PIO0_DMA(ALL1)
#define ACCESSCTRL_PIO0_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_PIO0_CORE1_MASK ACCESSCTRL_PIO0_CORE1(ALL1)
#define ACCESSCTRL_PIO0_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_PIO0_CORE0_MASK ACCESSCTRL_PIO0_CORE0(ALL1)
#define ACCESSCTRL_PIO0_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_PIO0_SP_MASK ACCESSCTRL_PIO0_SP(ALL1)
#define ACCESSCTRL_PIO0_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_PIO0_SU_MASK ACCESSCTRL_PIO0_SU(ALL1)
#define ACCESSCTRL_PIO0_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_PIO0_NSP_MASK ACCESSCTRL_PIO0_NSP(ALL1)
#define ACCESSCTRL_PIO0_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_PIO0_NSU_MASK ACCESSCTRL_PIO0_NSU(ALL1)

/*PIO1 Register macros*/

#define ACCESSCTRL_PIO1_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_PIO1_DBG_MASK ACCESSCTRL_PIO1_DBG(ALL1)
#define ACCESSCTRL_PIO1_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_PIO1_DMA_MASK ACCESSCTRL_PIO1_DMA(ALL1)
#define ACCESSCTRL_PIO1_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_PIO1_CORE1_MASK ACCESSCTRL_PIO1_CORE1(ALL1)
#define ACCESSCTRL_PIO1_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_PIO1_CORE0_MASK ACCESSCTRL_PIO1_CORE0(ALL1)
#define ACCESSCTRL_PIO1_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_PIO1_SP_MASK ACCESSCTRL_PIO1_SP(ALL1)
#define ACCESSCTRL_PIO1_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_PIO1_SU_MASK ACCESSCTRL_PIO1_SU(ALL1)
#define ACCESSCTRL_PIO1_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_PIO1_NSP_MASK ACCESSCTRL_PIO1_NSP(ALL1)
#define ACCESSCTRL_PIO1_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_PIO1_NSU_MASK ACCESSCTRL_PIO1_NSU(ALL1)

/*PIO2 Register macros*/

#define ACCESSCTRL_PIO2_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_PIO2_DBG_MASK ACCESSCTRL_PIO2_DBG(ALL1)
#define ACCESSCTRL_PIO2_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_PIO2_DMA_MASK ACCESSCTRL_PIO2_DMA(ALL1)
#define ACCESSCTRL_PIO2_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_PIO2_CORE1_MASK ACCESSCTRL_PIO2_CORE1(ALL1)
#define ACCESSCTRL_PIO2_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_PIO2_CORE0_MASK ACCESSCTRL_PIO2_CORE0(ALL1)
#define ACCESSCTRL_PIO2_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_PIO2_SP_MASK ACCESSCTRL_PIO2_SP(ALL1)
#define ACCESSCTRL_PIO2_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_PIO2_SU_MASK ACCESSCTRL_PIO2_SU(ALL1)
#define ACCESSCTRL_PIO2_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_PIO2_NSP_MASK ACCESSCTRL_PIO2_NSP(ALL1)
#define ACCESSCTRL_PIO2_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_PIO2_NSU_MASK ACCESSCTRL_PIO2_NSU(ALL1)

/*CORESIGHT_TRACE Register macros*/

#define ACCESSCTRL_CORESIGHT_TRACE_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_CORESIGHT_TRACE_DBG_MASK ACCESSCTRL_CORESIGHT_TRACE_DBG(ALL1)
#define ACCESSCTRL_CORESIGHT_TRACE_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_CORESIGHT_TRACE_DMA_MASK ACCESSCTRL_CORESIGHT_TRACE_DMA(ALL1)
#define ACCESSCTRL_CORESIGHT_TRACE_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_CORESIGHT_TRACE_CORE1_MASK ACCESSCTRL_CORESIGHT_TRACE_CORE1(ALL1)
#define ACCESSCTRL_CORESIGHT_TRACE_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_CORESIGHT_TRACE_CORE0_MASK ACCESSCTRL_CORESIGHT_TRACE_CORE0(ALL1)
#define ACCESSCTRL_CORESIGHT_TRACE_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_CORESIGHT_TRACE_SP_MASK ACCESSCTRL_CORESIGHT_TRACE_SP(ALL1)
#define ACCESSCTRL_CORESIGHT_TRACE_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_CORESIGHT_TRACE_SU_MASK ACCESSCTRL_CORESIGHT_TRACE_SU(ALL1)
#define ACCESSCTRL_CORESIGHT_TRACE_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_CORESIGHT_TRACE_NSP_MASK ACCESSCTRL_CORESIGHT_TRACE_NSP(ALL1)
#define ACCESSCTRL_CORESIGHT_TRACE_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_CORESIGHT_TRACE_NSU_MASK ACCESSCTRL_CORESIGHT_TRACE_NSU(ALL1)

/*CORESIGHT_PERIPH Register macros*/

#define ACCESSCTRL_CORESIGHT_PERIPH_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_CORESIGHT_PERIPH_DBG_MASK ACCESSCTRL_CORESIGHT_PERIPH_DBG(ALL1)
#define ACCESSCTRL_CORESIGHT_PERIPH_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_CORESIGHT_PERIPH_DMA_MASK ACCESSCTRL_CORESIGHT_PERIPH_DMA(ALL1)
#define ACCESSCTRL_CORESIGHT_PERIPH_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_CORESIGHT_PERIPH_CORE1_MASK ACCESSCTRL_CORESIGHT_PERIPH_CORE1(ALL1)
#define ACCESSCTRL_CORESIGHT_PERIPH_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_CORESIGHT_PERIPH_CORE0_MASK ACCESSCTRL_CORESIGHT_PERIPH_CORE0(ALL1)
#define ACCESSCTRL_CORESIGHT_PERIPH_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_CORESIGHT_PERIPH_SP_MASK ACCESSCTRL_CORESIGHT_PERIPH_SP(ALL1)
#define ACCESSCTRL_CORESIGHT_PERIPH_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_CORESIGHT_PERIPH_SU_MASK ACCESSCTRL_CORESIGHT_PERIPH_SU(ALL1)
#define ACCESSCTRL_CORESIGHT_PERIPH_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_CORESIGHT_PERIPH_NSP_MASK ACCESSCTRL_CORESIGHT_PERIPH_NSP(ALL1)
#define ACCESSCTRL_CORESIGHT_PERIPH_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_CORESIGHT_PERIPH_NSU_MASK ACCESSCTRL_CORESIGHT_PERIPH_NSU(ALL1)

/*SYSINFO Register macros*/

#define ACCESSCTRL_SYSINFO_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SYSINFO_DBG_MASK ACCESSCTRL_SYSINFO_DBG(ALL1)
#define ACCESSCTRL_SYSINFO_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SYSINFO_DMA_MASK ACCESSCTRL_SYSINFO_DMA(ALL1)
#define ACCESSCTRL_SYSINFO_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SYSINFO_CORE1_MASK ACCESSCTRL_SYSINFO_CORE1(ALL1)
#define ACCESSCTRL_SYSINFO_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SYSINFO_CORE0_MASK ACCESSCTRL_SYSINFO_CORE0(ALL1)
#define ACCESSCTRL_SYSINFO_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SYSINFO_SP_MASK ACCESSCTRL_SYSINFO_SP(ALL1)
#define ACCESSCTRL_SYSINFO_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SYSINFO_SU_MASK ACCESSCTRL_SYSINFO_SU(ALL1)
#define ACCESSCTRL_SYSINFO_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SYSINFO_NSP_MASK ACCESSCTRL_SYSINFO_NSP(ALL1)
#define ACCESSCTRL_SYSINFO_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SYSINFO_NSU_MASK ACCESSCTRL_SYSINFO_NSU(ALL1)

/*RESETS Register macros*/

#define ACCESSCTRL_RESETS_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_RESETS_DBG_MASK ACCESSCTRL_RESETS_DBG(ALL1)
#define ACCESSCTRL_RESETS_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_RESETS_DMA_MASK ACCESSCTRL_RESETS_DMA(ALL1)
#define ACCESSCTRL_RESETS_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_RESETS_CORE1_MASK ACCESSCTRL_RESETS_CORE1(ALL1)
#define ACCESSCTRL_RESETS_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_RESETS_CORE0_MASK ACCESSCTRL_RESETS_CORE0(ALL1)
#define ACCESSCTRL_RESETS_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_RESETS_SP_MASK ACCESSCTRL_RESETS_SP(ALL1)
#define ACCESSCTRL_RESETS_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_RESETS_SU_MASK ACCESSCTRL_RESETS_SU(ALL1)
#define ACCESSCTRL_RESETS_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_RESETS_NSP_MASK ACCESSCTRL_RESETS_NSP(ALL1)
#define ACCESSCTRL_RESETS_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_RESETS_NSU_MASK ACCESSCTRL_RESETS_NSU(ALL1)

/*IO_BANK0 Register macros*/

#define ACCESSCTRL_IO_BANK0_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_IO_BANK0_DBG_MASK ACCESSCTRL_IO_BANK0_DBG(ALL1)
#define ACCESSCTRL_IO_BANK0_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_IO_BANK0_DMA_MASK ACCESSCTRL_IO_BANK0_DMA(ALL1)
#define ACCESSCTRL_IO_BANK0_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_IO_BANK0_CORE1_MASK ACCESSCTRL_IO_BANK0_CORE1(ALL1)
#define ACCESSCTRL_IO_BANK0_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_IO_BANK0_CORE0_MASK ACCESSCTRL_IO_BANK0_CORE0(ALL1)
#define ACCESSCTRL_IO_BANK0_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_IO_BANK0_SP_MASK ACCESSCTRL_IO_BANK0_SP(ALL1)
#define ACCESSCTRL_IO_BANK0_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_IO_BANK0_SU_MASK ACCESSCTRL_IO_BANK0_SU(ALL1)
#define ACCESSCTRL_IO_BANK0_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_IO_BANK0_NSP_MASK ACCESSCTRL_IO_BANK0_NSP(ALL1)
#define ACCESSCTRL_IO_BANK0_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_IO_BANK0_NSU_MASK ACCESSCTRL_IO_BANK0_NSU(ALL1)

/*IO_BANK1 Register macros*/

#define ACCESSCTRL_IO_BANK1_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_IO_BANK1_DBG_MASK ACCESSCTRL_IO_BANK1_DBG(ALL1)
#define ACCESSCTRL_IO_BANK1_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_IO_BANK1_DMA_MASK ACCESSCTRL_IO_BANK1_DMA(ALL1)
#define ACCESSCTRL_IO_BANK1_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_IO_BANK1_CORE1_MASK ACCESSCTRL_IO_BANK1_CORE1(ALL1)
#define ACCESSCTRL_IO_BANK1_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_IO_BANK1_CORE0_MASK ACCESSCTRL_IO_BANK1_CORE0(ALL1)
#define ACCESSCTRL_IO_BANK1_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_IO_BANK1_SP_MASK ACCESSCTRL_IO_BANK1_SP(ALL1)
#define ACCESSCTRL_IO_BANK1_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_IO_BANK1_SU_MASK ACCESSCTRL_IO_BANK1_SU(ALL1)
#define ACCESSCTRL_IO_BANK1_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_IO_BANK1_NSP_MASK ACCESSCTRL_IO_BANK1_NSP(ALL1)
#define ACCESSCTRL_IO_BANK1_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_IO_BANK1_NSU_MASK ACCESSCTRL_IO_BANK1_NSU(ALL1)

/*PADS_BANK0 Register macros*/

#define ACCESSCTRL_PADS_BANK0_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_PADS_BANK0_DBG_MASK ACCESSCTRL_PADS_BANK0_DBG(ALL1)
#define ACCESSCTRL_PADS_BANK0_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_PADS_BANK0_DMA_MASK ACCESSCTRL_PADS_BANK0_DMA(ALL1)
#define ACCESSCTRL_PADS_BANK0_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_PADS_BANK0_CORE1_MASK ACCESSCTRL_PADS_BANK0_CORE1(ALL1)
#define ACCESSCTRL_PADS_BANK0_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_PADS_BANK0_CORE0_MASK ACCESSCTRL_PADS_BANK0_CORE0(ALL1)
#define ACCESSCTRL_PADS_BANK0_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_PADS_BANK0_SP_MASK ACCESSCTRL_PADS_BANK0_SP(ALL1)
#define ACCESSCTRL_PADS_BANK0_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_PADS_BANK0_SU_MASK ACCESSCTRL_PADS_BANK0_SU(ALL1)
#define ACCESSCTRL_PADS_BANK0_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_PADS_BANK0_NSP_MASK ACCESSCTRL_PADS_BANK0_NSP(ALL1)
#define ACCESSCTRL_PADS_BANK0_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_PADS_BANK0_NSU_MASK ACCESSCTRL_PADS_BANK0_NSU(ALL1)

/*PADS_QSPI Register macros*/

#define ACCESSCTRL_PADS_QSPI_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_PADS_QSPI_DBG_MASK ACCESSCTRL_PADS_QSPI_DBG(ALL1)
#define ACCESSCTRL_PADS_QSPI_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_PADS_QSPI_DMA_MASK ACCESSCTRL_PADS_QSPI_DMA(ALL1)
#define ACCESSCTRL_PADS_QSPI_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_PADS_QSPI_CORE1_MASK ACCESSCTRL_PADS_QSPI_CORE1(ALL1)
#define ACCESSCTRL_PADS_QSPI_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_PADS_QSPI_CORE0_MASK ACCESSCTRL_PADS_QSPI_CORE0(ALL1)
#define ACCESSCTRL_PADS_QSPI_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_PADS_QSPI_SP_MASK ACCESSCTRL_PADS_QSPI_SP(ALL1)
#define ACCESSCTRL_PADS_QSPI_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_PADS_QSPI_SU_MASK ACCESSCTRL_PADS_QSPI_SU(ALL1)
#define ACCESSCTRL_PADS_QSPI_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_PADS_QSPI_NSP_MASK ACCESSCTRL_PADS_QSPI_NSP(ALL1)
#define ACCESSCTRL_PADS_QSPI_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_PADS_QSPI_NSU_MASK ACCESSCTRL_PADS_QSPI_NSU(ALL1)

/*BUSCTRL Register macros*/

#define ACCESSCTRL_BUSCTRL_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_BUSCTRL_DBG_MASK ACCESSCTRL_BUSCTRL_DBG(ALL1)
#define ACCESSCTRL_BUSCTRL_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_BUSCTRL_DMA_MASK ACCESSCTRL_BUSCTRL_DMA(ALL1)
#define ACCESSCTRL_BUSCTRL_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_BUSCTRL_CORE1_MASK ACCESSCTRL_BUSCTRL_CORE1(ALL1)
#define ACCESSCTRL_BUSCTRL_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_BUSCTRL_CORE0_MASK ACCESSCTRL_BUSCTRL_CORE0(ALL1)
#define ACCESSCTRL_BUSCTRL_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_BUSCTRL_SP_MASK ACCESSCTRL_BUSCTRL_SP(ALL1)
#define ACCESSCTRL_BUSCTRL_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_BUSCTRL_SU_MASK ACCESSCTRL_BUSCTRL_SU(ALL1)
#define ACCESSCTRL_BUSCTRL_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_BUSCTRL_NSP_MASK ACCESSCTRL_BUSCTRL_NSP(ALL1)
#define ACCESSCTRL_BUSCTRL_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_BUSCTRL_NSU_MASK ACCESSCTRL_BUSCTRL_NSU(ALL1)

/*ADC0 Register macros*/

#define ACCESSCTRL_ADC0_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_ADC0_DBG_MASK ACCESSCTRL_ADC0_DBG(ALL1)
#define ACCESSCTRL_ADC0_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_ADC0_DMA_MASK ACCESSCTRL_ADC0_DMA(ALL1)
#define ACCESSCTRL_ADC0_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_ADC0_CORE1_MASK ACCESSCTRL_ADC0_CORE1(ALL1)
#define ACCESSCTRL_ADC0_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_ADC0_CORE0_MASK ACCESSCTRL_ADC0_CORE0(ALL1)
#define ACCESSCTRL_ADC0_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_ADC0_SP_MASK ACCESSCTRL_ADC0_SP(ALL1)
#define ACCESSCTRL_ADC0_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_ADC0_SU_MASK ACCESSCTRL_ADC0_SU(ALL1)
#define ACCESSCTRL_ADC0_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_ADC0_NSP_MASK ACCESSCTRL_ADC0_NSP(ALL1)
#define ACCESSCTRL_ADC0_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_ADC0_NSU_MASK ACCESSCTRL_ADC0_NSU(ALL1)

/*HSTX Register macros*/

#define ACCESSCTRL_HSTX_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_HSTX_DBG_MASK ACCESSCTRL_HSTX_DBG(ALL1)
#define ACCESSCTRL_HSTX_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_HSTX_DMA_MASK ACCESSCTRL_HSTX_DMA(ALL1)
#define ACCESSCTRL_HSTX_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_HSTX_CORE1_MASK ACCESSCTRL_HSTX_CORE1(ALL1)
#define ACCESSCTRL_HSTX_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_HSTX_CORE0_MASK ACCESSCTRL_HSTX_CORE0(ALL1)
#define ACCESSCTRL_HSTX_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_HSTX_SP_MASK ACCESSCTRL_HSTX_SP(ALL1)
#define ACCESSCTRL_HSTX_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_HSTX_SU_MASK ACCESSCTRL_HSTX_SU(ALL1)
#define ACCESSCTRL_HSTX_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_HSTX_NSP_MASK ACCESSCTRL_HSTX_NSP(ALL1)
#define ACCESSCTRL_HSTX_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_HSTX_NSU_MASK ACCESSCTRL_HSTX_NSU(ALL1)

/*I2C0 Register macros*/

#define ACCESSCTRL_I2C0_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_I2C0_DBG_MASK ACCESSCTRL_I2C0_DBG(ALL1)
#define ACCESSCTRL_I2C0_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_I2C0_DMA_MASK ACCESSCTRL_I2C0_DMA(ALL1)
#define ACCESSCTRL_I2C0_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_I2C0_CORE1_MASK ACCESSCTRL_I2C0_CORE1(ALL1)
#define ACCESSCTRL_I2C0_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_I2C0_CORE0_MASK ACCESSCTRL_I2C0_CORE0(ALL1)
#define ACCESSCTRL_I2C0_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_I2C0_SP_MASK ACCESSCTRL_I2C0_SP(ALL1)
#define ACCESSCTRL_I2C0_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_I2C0_SU_MASK ACCESSCTRL_I2C0_SU(ALL1)
#define ACCESSCTRL_I2C0_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_I2C0_NSP_MASK ACCESSCTRL_I2C0_NSP(ALL1)
#define ACCESSCTRL_I2C0_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_I2C0_NSU_MASK ACCESSCTRL_I2C0_NSU(ALL1)

/*I2C1 Register macros*/

#define ACCESSCTRL_I2C1_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_I2C1_DBG_MASK ACCESSCTRL_I2C1_DBG(ALL1)
#define ACCESSCTRL_I2C1_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_I2C1_DMA_MASK ACCESSCTRL_I2C1_DMA(ALL1)
#define ACCESSCTRL_I2C1_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_I2C1_CORE1_MASK ACCESSCTRL_I2C1_CORE1(ALL1)
#define ACCESSCTRL_I2C1_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_I2C1_CORE0_MASK ACCESSCTRL_I2C1_CORE0(ALL1)
#define ACCESSCTRL_I2C1_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_I2C1_SP_MASK ACCESSCTRL_I2C1_SP(ALL1)
#define ACCESSCTRL_I2C1_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_I2C1_SU_MASK ACCESSCTRL_I2C1_SU(ALL1)
#define ACCESSCTRL_I2C1_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_I2C1_NSP_MASK ACCESSCTRL_I2C1_NSP(ALL1)
#define ACCESSCTRL_I2C1_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_I2C1_NSU_MASK ACCESSCTRL_I2C1_NSU(ALL1)

/*PWM Register macros*/

#define ACCESSCTRL_PWM_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_PWM_DBG_MASK ACCESSCTRL_PWM_DBG(ALL1)
#define ACCESSCTRL_PWM_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_PWM_DMA_MASK ACCESSCTRL_PWM_DMA(ALL1)
#define ACCESSCTRL_PWM_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_PWM_CORE1_MASK ACCESSCTRL_PWM_CORE1(ALL1)
#define ACCESSCTRL_PWM_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_PWM_CORE0_MASK ACCESSCTRL_PWM_CORE0(ALL1)
#define ACCESSCTRL_PWM_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_PWM_SP_MASK ACCESSCTRL_PWM_SP(ALL1)
#define ACCESSCTRL_PWM_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_PWM_SU_MASK ACCESSCTRL_PWM_SU(ALL1)
#define ACCESSCTRL_PWM_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_PWM_NSP_MASK ACCESSCTRL_PWM_NSP(ALL1)
#define ACCESSCTRL_PWM_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_PWM_NSU_MASK ACCESSCTRL_PWM_NSU(ALL1)

/*SPI0 Register macros*/

#define ACCESSCTRL_SPI0_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SPI0_DBG_MASK ACCESSCTRL_SPI0_DBG(ALL1)
#define ACCESSCTRL_SPI0_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SPI0_DMA_MASK ACCESSCTRL_SPI0_DMA(ALL1)
#define ACCESSCTRL_SPI0_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SPI0_CORE1_MASK ACCESSCTRL_SPI0_CORE1(ALL1)
#define ACCESSCTRL_SPI0_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SPI0_CORE0_MASK ACCESSCTRL_SPI0_CORE0(ALL1)
#define ACCESSCTRL_SPI0_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SPI0_SP_MASK ACCESSCTRL_SPI0_SP(ALL1)
#define ACCESSCTRL_SPI0_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SPI0_SU_MASK ACCESSCTRL_SPI0_SU(ALL1)
#define ACCESSCTRL_SPI0_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SPI0_NSP_MASK ACCESSCTRL_SPI0_NSP(ALL1)
#define ACCESSCTRL_SPI0_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SPI0_NSU_MASK ACCESSCTRL_SPI0_NSU(ALL1)

/*SPI1 Register macros*/

#define ACCESSCTRL_SPI1_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SPI1_DBG_MASK ACCESSCTRL_SPI1_DBG(ALL1)
#define ACCESSCTRL_SPI1_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SPI1_DMA_MASK ACCESSCTRL_SPI1_DMA(ALL1)
#define ACCESSCTRL_SPI1_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SPI1_CORE1_MASK ACCESSCTRL_SPI1_CORE1(ALL1)
#define ACCESSCTRL_SPI1_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SPI1_CORE0_MASK ACCESSCTRL_SPI1_CORE0(ALL1)
#define ACCESSCTRL_SPI1_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SPI1_SP_MASK ACCESSCTRL_SPI1_SP(ALL1)
#define ACCESSCTRL_SPI1_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SPI1_SU_MASK ACCESSCTRL_SPI1_SU(ALL1)
#define ACCESSCTRL_SPI1_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SPI1_NSP_MASK ACCESSCTRL_SPI1_NSP(ALL1)
#define ACCESSCTRL_SPI1_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SPI1_NSU_MASK ACCESSCTRL_SPI1_NSU(ALL1)

/*TIMER0 Register macros*/

#define ACCESSCTRL_TIMER0_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_TIMER0_DBG_MASK ACCESSCTRL_TIMER0_DBG(ALL1)
#define ACCESSCTRL_TIMER0_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_TIMER0_DMA_MASK ACCESSCTRL_TIMER0_DMA(ALL1)
#define ACCESSCTRL_TIMER0_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_TIMER0_CORE1_MASK ACCESSCTRL_TIMER0_CORE1(ALL1)
#define ACCESSCTRL_TIMER0_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_TIMER0_CORE0_MASK ACCESSCTRL_TIMER0_CORE0(ALL1)
#define ACCESSCTRL_TIMER0_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_TIMER0_SP_MASK ACCESSCTRL_TIMER0_SP(ALL1)
#define ACCESSCTRL_TIMER0_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_TIMER0_SU_MASK ACCESSCTRL_TIMER0_SU(ALL1)
#define ACCESSCTRL_TIMER0_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_TIMER0_NSP_MASK ACCESSCTRL_TIMER0_NSP(ALL1)
#define ACCESSCTRL_TIMER0_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_TIMER0_NSU_MASK ACCESSCTRL_TIMER0_NSU(ALL1)

/*TIMER1 Register macros*/

#define ACCESSCTRL_TIMER1_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_TIMER1_DBG_MASK ACCESSCTRL_TIMER1_DBG(ALL1)
#define ACCESSCTRL_TIMER1_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_TIMER1_DMA_MASK ACCESSCTRL_TIMER1_DMA(ALL1)
#define ACCESSCTRL_TIMER1_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_TIMER1_CORE1_MASK ACCESSCTRL_TIMER1_CORE1(ALL1)
#define ACCESSCTRL_TIMER1_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_TIMER1_CORE0_MASK ACCESSCTRL_TIMER1_CORE0(ALL1)
#define ACCESSCTRL_TIMER1_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_TIMER1_SP_MASK ACCESSCTRL_TIMER1_SP(ALL1)
#define ACCESSCTRL_TIMER1_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_TIMER1_SU_MASK ACCESSCTRL_TIMER1_SU(ALL1)
#define ACCESSCTRL_TIMER1_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_TIMER1_NSP_MASK ACCESSCTRL_TIMER1_NSP(ALL1)
#define ACCESSCTRL_TIMER1_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_TIMER1_NSU_MASK ACCESSCTRL_TIMER1_NSU(ALL1)

/*UART0 Register macros*/

#define ACCESSCTRL_UART0_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_UART0_DBG_MASK ACCESSCTRL_UART0_DBG(ALL1)
#define ACCESSCTRL_UART0_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_UART0_DMA_MASK ACCESSCTRL_UART0_DMA(ALL1)
#define ACCESSCTRL_UART0_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_UART0_CORE1_MASK ACCESSCTRL_UART0_CORE1(ALL1)
#define ACCESSCTRL_UART0_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_UART0_CORE0_MASK ACCESSCTRL_UART0_CORE0(ALL1)
#define ACCESSCTRL_UART0_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_UART0_SP_MASK ACCESSCTRL_UART0_SP(ALL1)
#define ACCESSCTRL_UART0_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_UART0_SU_MASK ACCESSCTRL_UART0_SU(ALL1)
#define ACCESSCTRL_UART0_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_UART0_NSP_MASK ACCESSCTRL_UART0_NSP(ALL1)
#define ACCESSCTRL_UART0_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_UART0_NSU_MASK ACCESSCTRL_UART0_NSU(ALL1)

/*UART1 Register macros*/

#define ACCESSCTRL_UART1_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_UART1_DBG_MASK ACCESSCTRL_UART1_DBG(ALL1)
#define ACCESSCTRL_UART1_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_UART1_DMA_MASK ACCESSCTRL_UART1_DMA(ALL1)
#define ACCESSCTRL_UART1_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_UART1_CORE1_MASK ACCESSCTRL_UART1_CORE1(ALL1)
#define ACCESSCTRL_UART1_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_UART1_CORE0_MASK ACCESSCTRL_UART1_CORE0(ALL1)
#define ACCESSCTRL_UART1_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_UART1_SP_MASK ACCESSCTRL_UART1_SP(ALL1)
#define ACCESSCTRL_UART1_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_UART1_SU_MASK ACCESSCTRL_UART1_SU(ALL1)
#define ACCESSCTRL_UART1_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_UART1_NSP_MASK ACCESSCTRL_UART1_NSP(ALL1)
#define ACCESSCTRL_UART1_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_UART1_NSU_MASK ACCESSCTRL_UART1_NSU(ALL1)

/*OTP Register macros*/

#define ACCESSCTRL_OTP_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_OTP_DBG_MASK ACCESSCTRL_OTP_DBG(ALL1)
#define ACCESSCTRL_OTP_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_OTP_DMA_MASK ACCESSCTRL_OTP_DMA(ALL1)
#define ACCESSCTRL_OTP_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_OTP_CORE1_MASK ACCESSCTRL_OTP_CORE1(ALL1)
#define ACCESSCTRL_OTP_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_OTP_CORE0_MASK ACCESSCTRL_OTP_CORE0(ALL1)
#define ACCESSCTRL_OTP_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_OTP_SP_MASK ACCESSCTRL_OTP_SP(ALL1)
#define ACCESSCTRL_OTP_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_OTP_SU_MASK ACCESSCTRL_OTP_SU(ALL1)
#define ACCESSCTRL_OTP_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_OTP_NSP_MASK ACCESSCTRL_OTP_NSP(ALL1)
#define ACCESSCTRL_OTP_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_OTP_NSU_MASK ACCESSCTRL_OTP_NSU(ALL1)

/*TBMAN Register macros*/

#define ACCESSCTRL_TBMAN_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_TBMAN_DBG_MASK ACCESSCTRL_TBMAN_DBG(ALL1)
#define ACCESSCTRL_TBMAN_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_TBMAN_DMA_MASK ACCESSCTRL_TBMAN_DMA(ALL1)
#define ACCESSCTRL_TBMAN_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_TBMAN_CORE1_MASK ACCESSCTRL_TBMAN_CORE1(ALL1)
#define ACCESSCTRL_TBMAN_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_TBMAN_CORE0_MASK ACCESSCTRL_TBMAN_CORE0(ALL1)
#define ACCESSCTRL_TBMAN_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_TBMAN_SP_MASK ACCESSCTRL_TBMAN_SP(ALL1)
#define ACCESSCTRL_TBMAN_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_TBMAN_SU_MASK ACCESSCTRL_TBMAN_SU(ALL1)
#define ACCESSCTRL_TBMAN_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_TBMAN_NSP_MASK ACCESSCTRL_TBMAN_NSP(ALL1)
#define ACCESSCTRL_TBMAN_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_TBMAN_NSU_MASK ACCESSCTRL_TBMAN_NSU(ALL1)

/*POWMAN Register macros*/

#define ACCESSCTRL_POWMAN_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_POWMAN_DBG_MASK ACCESSCTRL_POWMAN_DBG(ALL1)
#define ACCESSCTRL_POWMAN_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_POWMAN_DMA_MASK ACCESSCTRL_POWMAN_DMA(ALL1)
#define ACCESSCTRL_POWMAN_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_POWMAN_CORE1_MASK ACCESSCTRL_POWMAN_CORE1(ALL1)
#define ACCESSCTRL_POWMAN_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_POWMAN_CORE0_MASK ACCESSCTRL_POWMAN_CORE0(ALL1)
#define ACCESSCTRL_POWMAN_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_POWMAN_SP_MASK ACCESSCTRL_POWMAN_SP(ALL1)
#define ACCESSCTRL_POWMAN_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_POWMAN_SU_MASK ACCESSCTRL_POWMAN_SU(ALL1)
#define ACCESSCTRL_POWMAN_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_POWMAN_NSP_MASK ACCESSCTRL_POWMAN_NSP(ALL1)
#define ACCESSCTRL_POWMAN_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_POWMAN_NSU_MASK ACCESSCTRL_POWMAN_NSU(ALL1)

/*TRNG Register macros*/

#define ACCESSCTRL_TRNG_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_TRNG_DBG_MASK ACCESSCTRL_TRNG_DBG(ALL1)
#define ACCESSCTRL_TRNG_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_TRNG_DMA_MASK ACCESSCTRL_TRNG_DMA(ALL1)
#define ACCESSCTRL_TRNG_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_TRNG_CORE1_MASK ACCESSCTRL_TRNG_CORE1(ALL1)
#define ACCESSCTRL_TRNG_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_TRNG_CORE0_MASK ACCESSCTRL_TRNG_CORE0(ALL1)
#define ACCESSCTRL_TRNG_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_TRNG_SP_MASK ACCESSCTRL_TRNG_SP(ALL1)
#define ACCESSCTRL_TRNG_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_TRNG_SU_MASK ACCESSCTRL_TRNG_SU(ALL1)
#define ACCESSCTRL_TRNG_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_TRNG_NSP_MASK ACCESSCTRL_TRNG_NSP(ALL1)
#define ACCESSCTRL_TRNG_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_TRNG_NSU_MASK ACCESSCTRL_TRNG_NSU(ALL1)

/*SHA256 Register macros*/

#define ACCESSCTRL_SHA256_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SHA256_DBG_MASK ACCESSCTRL_SHA256_DBG(ALL1)
#define ACCESSCTRL_SHA256_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SHA256_DMA_MASK ACCESSCTRL_SHA256_DMA(ALL1)
#define ACCESSCTRL_SHA256_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SHA256_CORE1_MASK ACCESSCTRL_SHA256_CORE1(ALL1)
#define ACCESSCTRL_SHA256_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SHA256_CORE0_MASK ACCESSCTRL_SHA256_CORE0(ALL1)
#define ACCESSCTRL_SHA256_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SHA256_SP_MASK ACCESSCTRL_SHA256_SP(ALL1)
#define ACCESSCTRL_SHA256_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SHA256_SU_MASK ACCESSCTRL_SHA256_SU(ALL1)
#define ACCESSCTRL_SHA256_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SHA256_NSP_MASK ACCESSCTRL_SHA256_NSP(ALL1)
#define ACCESSCTRL_SHA256_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SHA256_NSU_MASK ACCESSCTRL_SHA256_NSU(ALL1)

/*SYSCFG Register macros*/

#define ACCESSCTRL_SYSCFG_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_SYSCFG_DBG_MASK ACCESSCTRL_SYSCFG_DBG(ALL1)
#define ACCESSCTRL_SYSCFG_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_SYSCFG_DMA_MASK ACCESSCTRL_SYSCFG_DMA(ALL1)
#define ACCESSCTRL_SYSCFG_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_SYSCFG_CORE1_MASK ACCESSCTRL_SYSCFG_CORE1(ALL1)
#define ACCESSCTRL_SYSCFG_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_SYSCFG_CORE0_MASK ACCESSCTRL_SYSCFG_CORE0(ALL1)
#define ACCESSCTRL_SYSCFG_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_SYSCFG_SP_MASK ACCESSCTRL_SYSCFG_SP(ALL1)
#define ACCESSCTRL_SYSCFG_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_SYSCFG_SU_MASK ACCESSCTRL_SYSCFG_SU(ALL1)
#define ACCESSCTRL_SYSCFG_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_SYSCFG_NSP_MASK ACCESSCTRL_SYSCFG_NSP(ALL1)
#define ACCESSCTRL_SYSCFG_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_SYSCFG_NSU_MASK ACCESSCTRL_SYSCFG_NSU(ALL1)

/*CLOCKS Register macros*/

#define ACCESSCTRL_CLOCKS_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_CLOCKS_DBG_MASK ACCESSCTRL_CLOCKS_DBG(ALL1)
#define ACCESSCTRL_CLOCKS_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_CLOCKS_DMA_MASK ACCESSCTRL_CLOCKS_DMA(ALL1)
#define ACCESSCTRL_CLOCKS_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_CLOCKS_CORE1_MASK ACCESSCTRL_CLOCKS_CORE1(ALL1)
#define ACCESSCTRL_CLOCKS_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_CLOCKS_CORE0_MASK ACCESSCTRL_CLOCKS_CORE0(ALL1)
#define ACCESSCTRL_CLOCKS_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_CLOCKS_SP_MASK ACCESSCTRL_CLOCKS_SP(ALL1)
#define ACCESSCTRL_CLOCKS_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_CLOCKS_SU_MASK ACCESSCTRL_CLOCKS_SU(ALL1)
#define ACCESSCTRL_CLOCKS_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_CLOCKS_NSP_MASK ACCESSCTRL_CLOCKS_NSP(ALL1)
#define ACCESSCTRL_CLOCKS_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_CLOCKS_NSU_MASK ACCESSCTRL_CLOCKS_NSU(ALL1)

/*XOSC Register macros*/

#define ACCESSCTRL_XOSC_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_XOSC_DBG_MASK ACCESSCTRL_XOSC_DBG(ALL1)
#define ACCESSCTRL_XOSC_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_XOSC_DMA_MASK ACCESSCTRL_XOSC_DMA(ALL1)
#define ACCESSCTRL_XOSC_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_XOSC_CORE1_MASK ACCESSCTRL_XOSC_CORE1(ALL1)
#define ACCESSCTRL_XOSC_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_XOSC_CORE0_MASK ACCESSCTRL_XOSC_CORE0(ALL1)
#define ACCESSCTRL_XOSC_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_XOSC_SP_MASK ACCESSCTRL_XOSC_SP(ALL1)
#define ACCESSCTRL_XOSC_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_XOSC_SU_MASK ACCESSCTRL_XOSC_SU(ALL1)
#define ACCESSCTRL_XOSC_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_XOSC_NSP_MASK ACCESSCTRL_XOSC_NSP(ALL1)
#define ACCESSCTRL_XOSC_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_XOSC_NSU_MASK ACCESSCTRL_XOSC_NSU(ALL1)

/*ROSC Register macros*/

#define ACCESSCTRL_ROSC_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_ROSC_DBG_MASK ACCESSCTRL_ROSC_DBG(ALL1)
#define ACCESSCTRL_ROSC_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_ROSC_DMA_MASK ACCESSCTRL_ROSC_DMA(ALL1)
#define ACCESSCTRL_ROSC_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_ROSC_CORE1_MASK ACCESSCTRL_ROSC_CORE1(ALL1)
#define ACCESSCTRL_ROSC_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_ROSC_CORE0_MASK ACCESSCTRL_ROSC_CORE0(ALL1)
#define ACCESSCTRL_ROSC_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_ROSC_SP_MASK ACCESSCTRL_ROSC_SP(ALL1)
#define ACCESSCTRL_ROSC_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_ROSC_SU_MASK ACCESSCTRL_ROSC_SU(ALL1)
#define ACCESSCTRL_ROSC_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_ROSC_NSP_MASK ACCESSCTRL_ROSC_NSP(ALL1)
#define ACCESSCTRL_ROSC_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_ROSC_NSU_MASK ACCESSCTRL_ROSC_NSU(ALL1)

/*PLL_SYS Register macros*/

#define ACCESSCTRL_PLL_SYS_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_PLL_SYS_DBG_MASK ACCESSCTRL_PLL_SYS_DBG(ALL1)
#define ACCESSCTRL_PLL_SYS_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_PLL_SYS_DMA_MASK ACCESSCTRL_PLL_SYS_DMA(ALL1)
#define ACCESSCTRL_PLL_SYS_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_PLL_SYS_CORE1_MASK ACCESSCTRL_PLL_SYS_CORE1(ALL1)
#define ACCESSCTRL_PLL_SYS_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_PLL_SYS_CORE0_MASK ACCESSCTRL_PLL_SYS_CORE0(ALL1)
#define ACCESSCTRL_PLL_SYS_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_PLL_SYS_SP_MASK ACCESSCTRL_PLL_SYS_SP(ALL1)
#define ACCESSCTRL_PLL_SYS_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_PLL_SYS_SU_MASK ACCESSCTRL_PLL_SYS_SU(ALL1)
#define ACCESSCTRL_PLL_SYS_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_PLL_SYS_NSP_MASK ACCESSCTRL_PLL_SYS_NSP(ALL1)
#define ACCESSCTRL_PLL_SYS_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_PLL_SYS_NSU_MASK ACCESSCTRL_PLL_SYS_NSU(ALL1)

/*PLL_USB Register macros*/

#define ACCESSCTRL_PLL_USB_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_PLL_USB_DBG_MASK ACCESSCTRL_PLL_USB_DBG(ALL1)
#define ACCESSCTRL_PLL_USB_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_PLL_USB_DMA_MASK ACCESSCTRL_PLL_USB_DMA(ALL1)
#define ACCESSCTRL_PLL_USB_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_PLL_USB_CORE1_MASK ACCESSCTRL_PLL_USB_CORE1(ALL1)
#define ACCESSCTRL_PLL_USB_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_PLL_USB_CORE0_MASK ACCESSCTRL_PLL_USB_CORE0(ALL1)
#define ACCESSCTRL_PLL_USB_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_PLL_USB_SP_MASK ACCESSCTRL_PLL_USB_SP(ALL1)
#define ACCESSCTRL_PLL_USB_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_PLL_USB_SU_MASK ACCESSCTRL_PLL_USB_SU(ALL1)
#define ACCESSCTRL_PLL_USB_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_PLL_USB_NSP_MASK ACCESSCTRL_PLL_USB_NSP(ALL1)
#define ACCESSCTRL_PLL_USB_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_PLL_USB_NSU_MASK ACCESSCTRL_PLL_USB_NSU(ALL1)

/*TICKS Register macros*/

#define ACCESSCTRL_TICKS_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_TICKS_DBG_MASK ACCESSCTRL_TICKS_DBG(ALL1)
#define ACCESSCTRL_TICKS_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_TICKS_DMA_MASK ACCESSCTRL_TICKS_DMA(ALL1)
#define ACCESSCTRL_TICKS_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_TICKS_CORE1_MASK ACCESSCTRL_TICKS_CORE1(ALL1)
#define ACCESSCTRL_TICKS_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_TICKS_CORE0_MASK ACCESSCTRL_TICKS_CORE0(ALL1)
#define ACCESSCTRL_TICKS_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_TICKS_SP_MASK ACCESSCTRL_TICKS_SP(ALL1)
#define ACCESSCTRL_TICKS_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_TICKS_SU_MASK ACCESSCTRL_TICKS_SU(ALL1)
#define ACCESSCTRL_TICKS_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_TICKS_NSP_MASK ACCESSCTRL_TICKS_NSP(ALL1)
#define ACCESSCTRL_TICKS_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_TICKS_NSU_MASK ACCESSCTRL_TICKS_NSU(ALL1)

/*WATCHDOG Register macros*/

#define ACCESSCTRL_WATCHDOG_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_WATCHDOG_DBG_MASK ACCESSCTRL_WATCHDOG_DBG(ALL1)
#define ACCESSCTRL_WATCHDOG_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_WATCHDOG_DMA_MASK ACCESSCTRL_WATCHDOG_DMA(ALL1)
#define ACCESSCTRL_WATCHDOG_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_WATCHDOG_CORE1_MASK ACCESSCTRL_WATCHDOG_CORE1(ALL1)
#define ACCESSCTRL_WATCHDOG_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_WATCHDOG_CORE0_MASK ACCESSCTRL_WATCHDOG_CORE0(ALL1)
#define ACCESSCTRL_WATCHDOG_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_WATCHDOG_SP_MASK ACCESSCTRL_WATCHDOG_SP(ALL1)
#define ACCESSCTRL_WATCHDOG_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_WATCHDOG_SU_MASK ACCESSCTRL_WATCHDOG_SU(ALL1)
#define ACCESSCTRL_WATCHDOG_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_WATCHDOG_NSP_MASK ACCESSCTRL_WATCHDOG_NSP(ALL1)
#define ACCESSCTRL_WATCHDOG_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_WATCHDOG_NSU_MASK ACCESSCTRL_WATCHDOG_NSU(ALL1)

/*RSM Register macros*/

#define ACCESSCTRL_RSM_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_RSM_DBG_MASK ACCESSCTRL_RSM_DBG(ALL1)
#define ACCESSCTRL_RSM_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_RSM_DMA_MASK ACCESSCTRL_RSM_DMA(ALL1)
#define ACCESSCTRL_RSM_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_RSM_CORE1_MASK ACCESSCTRL_RSM_CORE1(ALL1)
#define ACCESSCTRL_RSM_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_RSM_CORE0_MASK ACCESSCTRL_RSM_CORE0(ALL1)
#define ACCESSCTRL_RSM_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_RSM_SP_MASK ACCESSCTRL_RSM_SP(ALL1)
#define ACCESSCTRL_RSM_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_RSM_SU_MASK ACCESSCTRL_RSM_SU(ALL1)
#define ACCESSCTRL_RSM_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_RSM_NSP_MASK ACCESSCTRL_RSM_NSP(ALL1)
#define ACCESSCTRL_RSM_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_RSM_NSU_MASK ACCESSCTRL_RSM_NSU(ALL1)

/*XIP_CTRL Register macros*/

#define ACCESSCTRL_XIP_CTRL_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_XIP_CTRL_DBG_MASK ACCESSCTRL_XIP_CTRL_DBG(ALL1)
#define ACCESSCTRL_XIP_CTRL_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_XIP_CTRL_DMA_MASK ACCESSCTRL_XIP_CTRL_DMA(ALL1)
#define ACCESSCTRL_XIP_CTRL_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_XIP_CTRL_CORE1_MASK ACCESSCTRL_XIP_CTRL_CORE1(ALL1)
#define ACCESSCTRL_XIP_CTRL_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_XIP_CTRL_CORE0_MASK ACCESSCTRL_XIP_CTRL_CORE0(ALL1)
#define ACCESSCTRL_XIP_CTRL_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_XIP_CTRL_SP_MASK ACCESSCTRL_XIP_CTRL_SP(ALL1)
#define ACCESSCTRL_XIP_CTRL_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_XIP_CTRL_SU_MASK ACCESSCTRL_XIP_CTRL_SU(ALL1)
#define ACCESSCTRL_XIP_CTRL_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_XIP_CTRL_NSP_MASK ACCESSCTRL_XIP_CTRL_NSP(ALL1)
#define ACCESSCTRL_XIP_CTRL_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_XIP_CTRL_NSU_MASK ACCESSCTRL_XIP_CTRL_NSU(ALL1)

/*XIP_QMI Register macros*/

#define ACCESSCTRL_XIP_QMI_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_XIP_QMI_DBG_MASK ACCESSCTRL_XIP_QMI_DBG(ALL1)
#define ACCESSCTRL_XIP_QMI_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_XIP_QMI_DMA_MASK ACCESSCTRL_XIP_QMI_DMA(ALL1)
#define ACCESSCTRL_XIP_QMI_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_XIP_QMI_CORE1_MASK ACCESSCTRL_XIP_QMI_CORE1(ALL1)
#define ACCESSCTRL_XIP_QMI_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_XIP_QMI_CORE0_MASK ACCESSCTRL_XIP_QMI_CORE0(ALL1)
#define ACCESSCTRL_XIP_QMI_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_XIP_QMI_SP_MASK ACCESSCTRL_XIP_QMI_SP(ALL1)
#define ACCESSCTRL_XIP_QMI_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_XIP_QMI_SU_MASK ACCESSCTRL_XIP_QMI_SU(ALL1)
#define ACCESSCTRL_XIP_QMI_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_XIP_QMI_NSP_MASK ACCESSCTRL_XIP_QMI_NSP(ALL1)
#define ACCESSCTRL_XIP_QMI_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_XIP_QMI_NSU_MASK ACCESSCTRL_XIP_QMI_NSU(ALL1)

/*XIP_AUX Register macros*/

#define ACCESSCTRL_XIP_AUX_DBG(v) (((v)&0x1)<<7)
#define ACCESSCTRL_XIP_AUX_DBG_MASK ACCESSCTRL_XIP_AUX_DBG(ALL1)
#define ACCESSCTRL_XIP_AUX_DMA(v) (((v)&0x1)<<6)
#define ACCESSCTRL_XIP_AUX_DMA_MASK ACCESSCTRL_XIP_AUX_DMA(ALL1)
#define ACCESSCTRL_XIP_AUX_CORE1(v) (((v)&0x1)<<5)
#define ACCESSCTRL_XIP_AUX_CORE1_MASK ACCESSCTRL_XIP_AUX_CORE1(ALL1)
#define ACCESSCTRL_XIP_AUX_CORE0(v) (((v)&0x1)<<4)
#define ACCESSCTRL_XIP_AUX_CORE0_MASK ACCESSCTRL_XIP_AUX_CORE0(ALL1)
#define ACCESSCTRL_XIP_AUX_SP(v) (((v)&0x1)<<3)
#define ACCESSCTRL_XIP_AUX_SP_MASK ACCESSCTRL_XIP_AUX_SP(ALL1)
#define ACCESSCTRL_XIP_AUX_SU(v) (((v)&0x1)<<2)
#define ACCESSCTRL_XIP_AUX_SU_MASK ACCESSCTRL_XIP_AUX_SU(ALL1)
#define ACCESSCTRL_XIP_AUX_NSP(v) (((v)&0x1)<<1)
#define ACCESSCTRL_XIP_AUX_NSP_MASK ACCESSCTRL_XIP_AUX_NSP(ALL1)
#define ACCESSCTRL_XIP_AUX_NSU(v) (((v)&0x1)<<0)
#define ACCESSCTRL_XIP_AUX_NSU_MASK ACCESSCTRL_XIP_AUX_NSU(ALL1)

#endif
